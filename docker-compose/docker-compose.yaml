version: "3.3"
services:
  postgres:
    image: postgres:15.3-bullseye
    container_name: postgres
    #    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_prepared_transactions=10"
    networks:
      - reservations

  mongo:
    image: mongo:5
    container_name: mongo
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=root
    #   - MONGO_INITDB_ROOT_PASSWORD=secret
    networks:
      - reservations
    ports:
      - "27017:27017"

  api:
    image: api
    container_name: api
    build:
      context: ../
      dockerfile: src/RestaurantReservation.Api/Dockerfile
    ports:
      - "5147:80"
      - "7257:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+;https://+
      - ASPNETCORE_HTTP_PORT=5147
      - ASPNETCORE_HTTPS_PORT=7257
    networks:
      - reservations

  identity:
    image: identity
    build:
      context: ../
      dockerfile: src/RestaurantReservation.Identity.Api/Dockerfile
    container_name: identity
    ports:
      - "5079:80"
      - "7016:443"
    volumes:
      - ~/.aspnet/https:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+;https://+
      - ASPNETCORE_HTTP_PORT=5079
      - ASPNETCORE_HTTPS_PORT=7016
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/%USERPROFILE%/.aspnet/https/aspnetapp.pfx
    networks:
      - reservations

networks:
  reservations:
