version: "3.9"

name: restaurant-reservations
services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    # restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - reservations

  postgres:
    image: postgres:15.3-bullseye
    container_name: postgres
    #    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_prepared_transactions=10"
    networks:
      - reservations

  mongo:
    image: mongo:6
    container_name: mongo
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=root
    #   - MONGO_INITDB_ROOT_PASSWORD=secret
    networks:
      - reservations
    ports:
      - "27017:27017"

  api-gateway:
    image: api-gateway
    container_name: api-gateway
    build:
      context: ../
      dockerfile: src/RestaurantReservation.ApiGateway/Dockerfile
    ports:
      - "5293:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
    networks:
      - reservations

  api-restaurant:
    image: api-restaurant
    container_name: api-restaurant
    build:
      context: ../
      dockerfile: src/RestaurantReservation.Api/Dockerfile
    ports:
      - "5147:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
    networks:
      - reservations

  api-identity:
    image: api-identity
    container_name: api-identity
    build:
      context: ../
      dockerfile: src/RestaurantReservation.Identity.Api/Dockerfile
    ports:
      - "5079:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
    networks:
      - reservations

networks:
  reservations:
